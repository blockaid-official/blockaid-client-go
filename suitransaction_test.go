// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

package blockaidclientgo_test

import (
	"context"
	"errors"
	"os"
	"testing"

	"github.com/blockaid-official/blockaid-client-go"
	"github.com/blockaid-official/blockaid-client-go/internal/testutil"
	"github.com/blockaid-official/blockaid-client-go/option"
)

func TestSuiTransactionScanWithOptionalParams(t *testing.T) {
	baseURL := "http://localhost:4010"
	if envURL, ok := os.LookupEnv("TEST_API_BASE_URL"); ok {
		baseURL = envURL
	}
	if !testutil.CheckTestServer(t, baseURL) {
		return
	}
	client := blockaidclientgo.NewClient(
		option.WithBaseURL(baseURL),
		option.WithAPIKey("My API Key"),
	)
	_, err := client.Sui.Transaction.Scan(context.TODO(), blockaidclientgo.SuiTransactionScanParams{
		AccountAddress: blockaidclientgo.F("0x45e90b3ea2e1920c43d92d224630d6a865c1b58a7b4e770c2ac156eab30eb491"),
		Chain:          blockaidclientgo.F(blockaidclientgo.SuiTransactionScanParamsChainMainnet),
		Metadata: blockaidclientgo.F[blockaidclientgo.SuiTransactionScanParamsMetadataUnion](blockaidclientgo.SuiTransactionScanParamsMetadataSuiWalletRequestMetadata{
			Type: blockaidclientgo.F(blockaidclientgo.SuiTransactionScanParamsMetadataSuiWalletRequestMetadataTypeWallet),
			URL:  blockaidclientgo.F("localhost"),
		}),
		Transaction: blockaidclientgo.F("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"),
		Options:     blockaidclientgo.F([]blockaidclientgo.SuiTransactionScanParamsOption{blockaidclientgo.SuiTransactionScanParamsOptionValidation}),
	})
	if err != nil {
		var apierr *blockaidclientgo.Error
		if errors.As(err, &apierr) {
			t.Log(string(apierr.DumpRequest(true)))
		}
		t.Fatalf("err should be nil: %s", err.Error())
	}
}
